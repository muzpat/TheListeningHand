//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TheListeningHand.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TheListeningHandEntities : DbContext
    {
        public TheListeningHandEntities()
            : base("name=TheListeningHandEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<day> days { get; set; }
        public virtual DbSet<stylist> stylists { get; set; }
        public virtual DbSet<availability> availabilities { get; set; }
    
        public virtual ObjectResult<spGetAvailabilty_Result4> spGetAvailabilty(Nullable<short> stylist)
        {
            var stylistParameter = stylist.HasValue ?
                new ObjectParameter("stylist", stylist) :
                new ObjectParameter("stylist", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAvailabilty_Result4>("spGetAvailabilty", stylistParameter);
        }
    
        public virtual int spUpdateAvailabilty(Nullable<short> stylist, string hrs, Nullable<int> dayid)
        {
            var stylistParameter = stylist.HasValue ?
                new ObjectParameter("stylist", stylist) :
                new ObjectParameter("stylist", typeof(short));
    
            var hrsParameter = hrs != null ?
                new ObjectParameter("hrs", hrs) :
                new ObjectParameter("hrs", typeof(string));
    
            var dayidParameter = dayid.HasValue ?
                new ObjectParameter("dayid", dayid) :
                new ObjectParameter("dayid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateAvailabilty", stylistParameter, hrsParameter, dayidParameter);
        }
    
        public virtual ObjectResult<spGetUserDetails_Result2> spGetUserDetails(Nullable<int> stylist)
        {
            var stylistParameter = stylist.HasValue ?
                new ObjectParameter("stylist", stylist) :
                new ObjectParameter("stylist", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUserDetails_Result2>("spGetUserDetails", stylistParameter);
        }
    }
}
